name: Build and deploy wheels to pypi

on:
  push:
    tags:
      - 20*

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Describe Tag & Branch Name
        id: build_names
        shell: bash
        run: |
          echo ::set-output name=TAG_NAME::${GITHUB_REF#refs/tags/}

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel

      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: |
          choco install vcpython27 -f -y

      - name: Build wheels
        shell: bash
        run: |
          echo $TAG_NAME
          cd python
          echo $TAG_NAME >VERSION
          cp -r ../lib .
          cp -r ../third_party .
          mkdir app
          cp -r ../app/tng app
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: 3
          TAG_NAME: ${{ steps.build_names.outputs.TAG_NAME }}

      - uses: actions/upload-artifact@v2
        with:
          path: python/wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Describe Tag & Branch Name
        id: build_names
        run: |
          echo ::set-output name=TAG_NAME::${GITHUB_REF#refs/tags/}

      - name: Build sdist
        run: |
          echo $TAG_NAME
          cd python
          echo $TAG_NAME >VERSION
          cp -r ../lib .
          cp -r ../third_party .
          mkdir app
          cp -r ../app/tng app
          python setup.py sdist
        env:
          TAG_NAME: ${{ steps.build_names.outputs.TAG_NAME }}

      - uses: actions/upload-artifact@v2
        with:
          path: python/dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.pypi_username }}
          password: ${{ secrets.pypi_password }}
